@using System.Web.Optimization
@model PeopleTable.ViewModels.LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/_Layout.cshtml";
}

@Styles.Render("~/signin/css")

<div class="container">

    @*<form class="form-signin">
        <h2 class="form-signin-heading">Please sign in</h2>
        <label for="inputEmail" class="sr-only">Email address</label>
        <input type="email" id="inputEmail" class="form-control" placeholder="login" required autofocus>
        <label for="inputPassword" class="sr-only">Password</label>
        <input type="password" id="inputPassword" class="form-control" placeholder="Password" required>
        <div class="checkbox">
            <label>
                <input type="checkbox" value="remember-me"> Remember me
            </label>
        </div>
        <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
    </form>*@

    @using (Html.BeginForm("Login", "Authentication", FormMethod.Post, new { @class = "form-signin" }))
    {
        @Html.AntiForgeryToken()
        <h2 class="form-signin-heading">Please sign in</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.Login, new { @class = "sr-only" })
        @Html.TextBoxFor(m => m.Login, new { @class = "form-control", @placeholder = "Login" })
        @Html.ValidationMessageFor(m => m.Login, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.Password, new { @class = "sr-only" })
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        <div class="checkbox">
            @Html.CheckBoxFor(m => m.RememberMe)
            @Html.LabelFor(m => m.RememberMe)
        </div>

        <input type="submit" value="Log in" class="btn btn-lg btn-primary btn-block" />
    }
</div>
